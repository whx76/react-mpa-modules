{"version":3,"file":"/assets/js/WrcIScroll5.js","sources":["webpack:///./WrcIScroll5/examples/Index.jsx","webpack:///./WrcIScroll5/examples/index.css?568b","webpack:///./WrcIScroll5/examples/index.css","webpack:///./WrcIScroll5/lib/WrcIScroll5.jsx"],"sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nrequire('../../reset.css');\n\nrequire('./index.css');\n\nvar _WrcIScroll = require('../lib/WrcIScroll5.jsx');\n\nvar _WrcIScroll2 = _interopRequireDefault(_WrcIScroll);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar IScrollDemo = function (_React$Component) {\n\t_inherits(IScrollDemo, _React$Component);\n\n\tfunction IScrollDemo(props) {\n\t\t_classCallCheck(this, IScrollDemo);\n\n\t\treturn _possibleConstructorReturn(this, (IScrollDemo.__proto__ || Object.getPrototypeOf(IScrollDemo)).call(this, props));\n\t}\n\n\t_createClass(IScrollDemo, [{\n\t\tkey: 'componentDidMount',\n\t\tvalue: function componentDidMount() {\n\t\t\tvar myScroll = new _WrcIScroll2.default('#wrapper', {\n\t\t\t\tscrollbars: true\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\t\t\treturn _react2.default.createElement(\n\t\t\t\t'div',\n\t\t\t\t{ id: 'wrapper', className: 'wrapper' },\n\t\t\t\t_react2.default.createElement(\n\t\t\t\t\t'ul',\n\t\t\t\t\tnull,\n\t\t\t\t\t_react2.default.createElement(\n\t\t\t\t\t\t'li',\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\t'item1'\n\t\t\t\t\t),\n\t\t\t\t\t_react2.default.createElement(\n\t\t\t\t\t\t'li',\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\t'item2'\n\t\t\t\t\t),\n\t\t\t\t\t_react2.default.createElement(\n\t\t\t\t\t\t'li',\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\t'item3'\n\t\t\t\t\t),\n\t\t\t\t\t_react2.default.createElement(\n\t\t\t\t\t\t'li',\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\t'item4'\n\t\t\t\t\t),\n\t\t\t\t\t_react2.default.createElement(\n\t\t\t\t\t\t'li',\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\t'item5'\n\t\t\t\t\t),\n\t\t\t\t\t_react2.default.createElement(\n\t\t\t\t\t\t'li',\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\t'item6'\n\t\t\t\t\t),\n\t\t\t\t\t_react2.default.createElement(\n\t\t\t\t\t\t'li',\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\t'item7'\n\t\t\t\t\t),\n\t\t\t\t\t_react2.default.createElement(\n\t\t\t\t\t\t'li',\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\t'item8'\n\t\t\t\t\t),\n\t\t\t\t\t_react2.default.createElement(\n\t\t\t\t\t\t'li',\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\t'item9'\n\t\t\t\t\t),\n\t\t\t\t\t_react2.default.createElement(\n\t\t\t\t\t\t'li',\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\t'item10'\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}]);\n\n\treturn IScrollDemo;\n}(_react2.default.Component);\n\n;\nwindow.onload = function () {\n\t_reactDom2.default.render(_react2.default.createElement(IScrollDemo, null), document.getElementById('demo'));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./WrcIScroll5/examples/Index.jsx\n// module id = 0\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../node_modules/.0.26.0@css-loader/index.js!./index.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../node_modules/.0.13.1@style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../node_modules/.0.26.0@css-loader/index.js!./index.css\", function() {\n\t\t\tvar newContent = require(\"!!./../../node_modules/.0.26.0@css-loader/index.js!./index.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./WrcIScroll5/examples/index.css\n// module id = 7\n// module chunks = 0","exports = module.exports = require(\"./../../node_modules/.0.26.0@css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".wrapper {\\r\\n\\twidth: 100%;\\r\\n\\theight: 200px;\\r\\n\\toverflow: hidden;\\r\\n\\tposition: relative;\\r\\n}\\r\\n.wrapper ul li {\\r\\n\\theight: 40px;\\r\\n\\tline-height: 40px;\\r\\n\\tcolor: #666;\\r\\n\\tfont-size: 12px;\\r\\n\\tborder-bottom: 1px solid #6492e3;\\r\\n\\tbox-sizing: border-box;\\r\\n\\tpadding-left: 15px;\\r\\n}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.0.26.0@css-loader!./WrcIScroll5/examples/index.css\n// module id = 8\n// module chunks = 0","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\r\n * @file\r\n * @author\r\n * baidu.inc\r\n */\n/*\r\n * github:https://github.com/cubiq/iscroll\r\n */\n(function () {\n    var rAF = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        window.setTimeout(callback, 1000 / 60);\n    };\n\n    var utils = function () {\n        var me = {};\n\n        var _elementStyle = document.createElement('div').style;\n        var _vendor = function () {\n            var vendors = ['t', 'webkitT', 'MozT', 'msT', 'OT'],\n                transform,\n                i = 0,\n                l = vendors.length;\n\n            for (; i < l; i++) {\n                transform = vendors[i] + 'ransform';\n                if (transform in _elementStyle) return vendors[i].substr(0, vendors[i].length - 1);\n            }\n\n            return false;\n        }();\n\n        function _prefixStyle(style) {\n            if (_vendor === false) return false;\n            if (_vendor === '') return style;\n            return _vendor + style.charAt(0).toUpperCase() + style.substr(1);\n        }\n\n        me.getTime = Date.now || function getTime() {\n            return new Date().getTime();\n        };\n\n        me.extend = function (target, obj) {\n            for (var i in obj) {\n                target[i] = obj[i];\n            }\n        };\n\n        me.addEvent = function (el, type, fn, capture) {\n            el.addEventListener(type, fn, !!capture);\n        };\n\n        me.removeEvent = function (el, type, fn, capture) {\n            el.removeEventListener(type, fn, !!capture);\n        };\n\n        me.prefixPointerEvent = function (pointerEvent) {\n            return window.MSPointerEvent ? 'MSPointer' + pointerEvent.charAt(9).toUpperCase() + pointerEvent.substr(10) : pointerEvent;\n        };\n\n        me.momentum = function (current, start, time, lowerMargin, wrapperSize, deceleration) {\n            var distance = current - start,\n                speed = Math.abs(distance) / time,\n                destination,\n                duration;\n\n            deceleration = deceleration === undefined ? 0.0006 : deceleration;\n\n            destination = current + speed * speed / (2 * deceleration) * (distance < 0 ? -1 : 1);\n            duration = speed / deceleration;\n\n            if (destination < lowerMargin) {\n                destination = wrapperSize ? lowerMargin - wrapperSize / 2.5 * (speed / 8) : lowerMargin;\n                distance = Math.abs(destination - current);\n                duration = distance / speed;\n            } else if (destination > 0) {\n                destination = wrapperSize ? wrapperSize / 2.5 * (speed / 8) : 0;\n                distance = Math.abs(current) + destination;\n                duration = distance / speed;\n            }\n\n            return {\n                destination: Math.round(destination),\n                duration: duration\n            };\n        };\n\n        var _transform = _prefixStyle('transform');\n\n        me.extend(me, {\n            hasTransform: _transform !== false,\n            hasPerspective: _prefixStyle('perspective') in _elementStyle,\n            hasTouch: 'ontouchstart' in window,\n            hasPointer: window.PointerEvent || window.MSPointerEvent, // IE10 is prefixed\n            hasTransition: _prefixStyle('transition') in _elementStyle\n        });\n\n        // This should find all Android browsers lower than build 535.19 (both stock browser and webview)\n        me.isBadAndroid = /Android /.test(window.navigator.appVersion) && !/Chrome\\/\\d/.test(window.navigator.appVersion);\n\n        me.extend(me.style = {}, {\n            transform: _transform,\n            transitionTimingFunction: _prefixStyle('transitionTimingFunction'),\n            transitionDuration: _prefixStyle('transitionDuration'),\n            transitionDelay: _prefixStyle('transitionDelay'),\n            transformOrigin: _prefixStyle('transformOrigin')\n        });\n\n        me.hasClass = function (e, c) {\n            var re = new RegExp(\"(^|\\\\s)\" + c + \"(\\\\s|$)\");\n            return re.test(e.className);\n        };\n\n        me.addClass = function (e, c) {\n            if (me.hasClass(e, c)) {\n                return;\n            }\n\n            var newclass = e.className.split(' ');\n            newclass.push(c);\n            e.className = newclass.join(' ');\n        };\n\n        me.removeClass = function (e, c) {\n            if (!me.hasClass(e, c)) {\n                return;\n            }\n\n            var re = new RegExp(\"(^|\\\\s)\" + c + \"(\\\\s|$)\", 'g');\n            e.className = e.className.replace(re, ' ');\n        };\n\n        me.offset = function (el) {\n            var left = -el.offsetLeft,\n                top = -el.offsetTop;\n\n            // jshint -W084\n            while (el = el.offsetParent) {\n                left -= el.offsetLeft;\n                top -= el.offsetTop;\n            }\n            // jshint +W084\n\n            return {\n                left: left,\n                top: top\n            };\n        };\n\n        me.preventDefaultException = function (el, exceptions) {\n            for (var i in exceptions) {\n                if (exceptions[i].test(el[i])) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n\n        me.extend(me.eventType = {}, {\n            touchstart: 1,\n            touchmove: 1,\n            touchend: 1,\n\n            mousedown: 2,\n            mousemove: 2,\n            mouseup: 2,\n\n            pointerdown: 3,\n            pointermove: 3,\n            pointerup: 3,\n\n            MSPointerDown: 3,\n            MSPointerMove: 3,\n            MSPointerUp: 3\n        });\n\n        me.extend(me.ease = {}, {\n            quadratic: {\n                style: 'cubic-bezier(0.25, 0.46, 0.45, 0.94)',\n                fn: function fn(k) {\n                    return k * (2 - k);\n                }\n            },\n            circular: {\n                style: 'cubic-bezier(0.1, 0.57, 0.1, 1)', // Not properly \"circular\" but this looks better, it should be (0.075, 0.82, 0.165, 1)\n                fn: function fn(k) {\n                    return Math.sqrt(1 - --k * k);\n                }\n            },\n            back: {\n                style: 'cubic-bezier(0.175, 0.885, 0.32, 1.275)',\n                fn: function fn(k) {\n                    var b = 4;\n                    return (k = k - 1) * k * ((b + 1) * k + b) + 1;\n                }\n            },\n            bounce: {\n                style: '',\n                fn: function fn(k) {\n                    if ((k /= 1) < 1 / 2.75) {\n                        return 7.5625 * k * k;\n                    } else if (k < 2 / 2.75) {\n                        return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n                    } else if (k < 2.5 / 2.75) {\n                        return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n                    } else {\n                        return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n                    }\n                }\n            },\n            elastic: {\n                style: '',\n                fn: function fn(k) {\n                    var f = 0.22,\n                        e = 0.4;\n\n                    if (k === 0) {\n                        return 0;\n                    }\n                    if (k == 1) {\n                        return 1;\n                    }\n\n                    return e * Math.pow(2, -10 * k) * Math.sin((k - f / 4) * (2 * Math.PI) / f) + 1;\n                }\n            }\n        });\n\n        me.tap = function (e, eventName) {\n            var ev = document.createEvent('Event');\n            ev.initEvent(eventName, true, true);\n            ev.pageX = e.pageX;\n            ev.pageY = e.pageY;\n            e.target.dispatchEvent(ev);\n        };\n\n        me.click = function (e) {\n            var target = e.target,\n                ev;\n\n            if (!/(SELECT|INPUT|TEXTAREA)/i.test(target.tagName)) {\n                ev = document.createEvent('MouseEvents');\n                ev.initMouseEvent('click', true, true, e.view, 1, target.screenX, target.screenY, target.clientX, target.clientY, e.ctrlKey, e.altKey, e.shiftKey, e.metaKey, 0, null);\n\n                ev._constructed = true;\n                target.dispatchEvent(ev);\n            }\n        };\n\n        return me;\n    }();\n\n    function IScroll(el, options) {\n        this.wrapper = typeof el == 'string' ? document.querySelector(el) : el;\n        this.scroller = this.wrapper.children[0];\n        this.scrollerStyle = this.scroller.style; // cache style for better performance\n\n        this.options = {\n\n            resizeScrollbars: true,\n\n            mouseWheelSpeed: 20,\n\n            snapThreshold: 0.334,\n\n            // INSERT POINT: OPTIONS \n\n            startX: 0,\n            startY: 0,\n            scrollY: true,\n            directionLockThreshold: 5,\n            momentum: true,\n\n            bounce: true,\n            bounceTime: 600,\n            bounceEasing: '',\n\n            preventDefault: true,\n            preventDefaultException: {\n                tagName: /^(INPUT|TEXTAREA|BUTTON|SELECT)$/\n            },\n\n            HWCompositing: true,\n            useTransition: true,\n            useTransform: true\n        };\n\n        for (var i in options) {\n            this.options[i] = options[i];\n        }\n\n        // Normalize options\n        this.translateZ = this.options.HWCompositing && utils.hasPerspective ? ' translateZ(0)' : '';\n\n        this.options.useTransition = utils.hasTransition && this.options.useTransition;\n        this.options.useTransform = utils.hasTransform && this.options.useTransform;\n\n        this.options.eventPassthrough = this.options.eventPassthrough === true ? 'vertical' : this.options.eventPassthrough;\n        this.options.preventDefault = !this.options.eventPassthrough && this.options.preventDefault;\n\n        // If you want eventPassthrough I have to lock one of the axes\n        this.options.scrollY = this.options.eventPassthrough == 'vertical' ? false : this.options.scrollY;\n        this.options.scrollX = this.options.eventPassthrough == 'horizontal' ? false : this.options.scrollX;\n\n        // With eventPassthrough we also need lockDirection mechanism\n        this.options.freeScroll = this.options.freeScroll && !this.options.eventPassthrough;\n        this.options.directionLockThreshold = this.options.eventPassthrough ? 0 : this.options.directionLockThreshold;\n\n        this.options.bounceEasing = typeof this.options.bounceEasing == 'string' ? utils.ease[this.options.bounceEasing] || utils.ease.circular : this.options.bounceEasing;\n\n        this.options.resizePolling = this.options.resizePolling === undefined ? 60 : this.options.resizePolling;\n\n        if (this.options.tap === true) {\n            this.options.tap = 'tap';\n        }\n\n        if (this.options.shrinkScrollbars == 'scale') {\n            this.options.useTransition = false;\n        }\n\n        this.options.invertWheelDirection = this.options.invertWheelDirection ? -1 : 1;\n\n        if (this.options.probeType == 3) {\n            this.options.useTransition = false;\n        }\n\n        // INSERT POINT: NORMALIZATION\n\n        // Some defaults\t\n        this.x = 0;\n        this.y = 0;\n        this.directionX = 0;\n        this.directionY = 0;\n        this._events = {};\n\n        // INSERT POINT: DEFAULTS\n\n        this._init();\n        this.refresh();\n\n        this.scrollTo(this.options.startX, this.options.startY);\n        this.enable();\n    }\n\n    IScroll.prototype = {\n        version: '5.1.3',\n\n        _init: function _init() {\n            this._initEvents();\n\n            if (this.options.scrollbars || this.options.indicators) {\n                this._initIndicators();\n            }\n\n            if (this.options.mouseWheel) {\n                this._initWheel();\n            }\n\n            if (this.options.snap) {\n                this._initSnap();\n            }\n\n            if (this.options.keyBindings) {\n                this._initKeys();\n            }\n\n            // INSERT POINT: _init\n        },\n\n        destroy: function destroy() {\n            this._initEvents(true);\n\n            this._execEvent('destroy');\n        },\n\n        _transitionEnd: function _transitionEnd(e) {\n            if (e.target != this.scroller || !this.isInTransition) {\n                return;\n            }\n\n            this._transitionTime();\n            if (!this.resetPosition(this.options.bounceTime)) {\n                this.isInTransition = false;\n                this._execEvent('scrollEnd');\n            }\n        },\n\n        _start: function _start(e) {\n            // React to left mouse button only\n            if (utils.eventType[e.type] != 1) {\n                if (e.button !== 0) {\n                    return;\n                }\n            }\n\n            if (!this.enabled || this.initiated && utils.eventType[e.type] !== this.initiated) {\n                return;\n            }\n\n            if (this.options.preventDefault && !utils.isBadAndroid && !utils.preventDefaultException(e.target, this.options.preventDefaultException)) {\n                e.preventDefault();\n            }\n\n            var point = e.touches ? e.touches[0] : e,\n                pos;\n\n            this.initiated = utils.eventType[e.type];\n            this.moved = false;\n            this.distX = 0;\n            this.distY = 0;\n            this.directionX = 0;\n            this.directionY = 0;\n            this.directionLocked = 0;\n\n            this._transitionTime();\n\n            this.startTime = utils.getTime();\n\n            if (this.options.useTransition && this.isInTransition) {\n                this.isInTransition = false;\n                pos = this.getComputedPosition();\n                this._translate(Math.round(pos.x), Math.round(pos.y));\n                this._execEvent('scrollEnd');\n            } else if (!this.options.useTransition && this.isAnimating) {\n                this.isAnimating = false;\n                this._execEvent('scrollEnd');\n            }\n\n            this.startX = this.x;\n            this.startY = this.y;\n            this.absStartX = this.x;\n            this.absStartY = this.y;\n            this.pointX = point.pageX;\n            this.pointY = point.pageY;\n\n            this._execEvent('beforeScrollStart');\n        },\n\n        _move: function _move(e) {\n            if (!this.enabled || utils.eventType[e.type] !== this.initiated) {\n                return;\n            }\n\n            if (this.options.preventDefault) {\n                // increases performance on Android? TODO: check!\n                e.preventDefault();\n            }\n\n            var point = e.touches ? e.touches[0] : e,\n                deltaX = point.pageX - this.pointX,\n                deltaY = point.pageY - this.pointY,\n                timestamp = utils.getTime(),\n                newX,\n                newY,\n                absDistX,\n                absDistY;\n\n            this.pointX = point.pageX;\n            this.pointY = point.pageY;\n\n            if (this.pointY <= 10 || this.pointY >= document.body.clientHeight - 10) {\n                //直接释放mousemove事件\n                this._end(e);return;\n            }\n\n            this.distX += deltaX;\n            this.distY += deltaY;\n            absDistX = Math.abs(this.distX);\n            absDistY = Math.abs(this.distY);\n\n            // We need to move at least 10 pixels for the scrolling to initiate\n            if (timestamp - this.endTime > 300 && absDistX < 10 && absDistY < 10) {\n                return;\n            }\n\n            // If you are scrolling in one direction lock the other\n            if (!this.directionLocked && !this.options.freeScroll) {\n                if (absDistX > absDistY + this.options.directionLockThreshold) {\n                    this.directionLocked = 'h'; // lock horizontally\n                } else if (absDistY >= absDistX + this.options.directionLockThreshold) {\n                    this.directionLocked = 'v'; // lock vertically\n                } else {\n                    this.directionLocked = 'n'; // no lock\n                }\n            }\n\n            if (this.directionLocked == 'h') {\n                if (this.options.eventPassthrough == 'vertical') {\n                    e.preventDefault();\n                } else if (this.options.eventPassthrough == 'horizontal') {\n                    this.initiated = false;\n                    return;\n                }\n\n                deltaY = 0;\n            } else if (this.directionLocked == 'v') {\n                if (this.options.eventPassthrough == 'horizontal') {\n                    e.preventDefault();\n                } else if (this.options.eventPassthrough == 'vertical') {\n                    this.initiated = false;\n                    return;\n                }\n\n                deltaX = 0;\n            }\n\n            deltaX = this.hasHorizontalScroll ? deltaX : 0;\n            deltaY = this.hasVerticalScroll ? deltaY : 0;\n\n            newX = this.x + deltaX;\n            newY = this.y + deltaY;\n\n            // Slow down if outside of the boundaries\n            if (newX > 0 || newX < this.maxScrollX) {\n                newX = this.options.bounce ? this.x + deltaX / 3 : newX > 0 ? 0 : this.maxScrollX;\n            }\n            if (newY > 0 || newY < this.maxScrollY) {\n                newY = this.options.bounce ? this.y + deltaY / 3 : newY > 0 ? 0 : this.maxScrollY;\n            }\n\n            this.directionX = deltaX > 0 ? -1 : deltaX < 0 ? 1 : 0;\n            this.directionY = deltaY > 0 ? -1 : deltaY < 0 ? 1 : 0;\n\n            if (!this.moved) {\n                this._execEvent('scrollStart');\n            }\n\n            this.moved = true;\n\n            this._translate(newX, newY);\n\n            /* REPLACE START: _move */\n            if (timestamp - this.startTime > 300) {\n                this.startTime = timestamp;\n                this.startX = this.x;\n                this.startY = this.y;\n\n                if (this.options.probeType == 1) {\n                    this._execEvent('scroll');\n                }\n            }\n\n            if (this.options.probeType > 1) {\n                this._execEvent('scroll');\n            }\n            /* REPLACE END: _move */\n        },\n\n        _end: function _end(e) {\n            if (!this.enabled || utils.eventType[e.type] !== this.initiated) {\n                return;\n            }\n\n            if (this.options.preventDefault && !utils.preventDefaultException(e.target, this.options.preventDefaultException)) {\n                e.preventDefault();\n            }\n\n            var point = e.changedTouches ? e.changedTouches[0] : e,\n                momentumX,\n                momentumY,\n                duration = utils.getTime() - this.startTime,\n                newX = Math.round(this.x),\n                newY = Math.round(this.y),\n                distanceX = Math.abs(newX - this.startX),\n                distanceY = Math.abs(newY - this.startY),\n                time = 0,\n                easing = '';\n\n            this.isInTransition = 0;\n            this.initiated = 0;\n            this.endTime = utils.getTime();\n\n            // reset if we are outside of the boundaries\n            if (this.resetPosition(this.options.bounceTime)) {\n                return;\n            }\n\n            this.scrollTo(newX, newY); // ensures that the last position is rounded\n\n            // we scrolled less than 10 pixels\n            if (!this.moved) {\n                if (this.options.tap) {\n                    utils.tap(e, this.options.tap);\n                }\n\n                if (this.options.click) {\n                    utils.click(e);\n                }\n\n                this._execEvent('scrollCancel');\n                return;\n            }\n\n            if (this._events.flick && duration < 200 && distanceX < 100 && distanceY < 100) {\n                this._execEvent('flick');\n                return;\n            }\n\n            // start momentum animation if needed\n            if (this.options.momentum && duration < 300) {\n                momentumX = this.hasHorizontalScroll ? utils.momentum(this.x, this.startX, duration, this.maxScrollX, this.options.bounce ? this.wrapperWidth : 0, this.options.deceleration) : {\n                    destination: newX,\n                    duration: 0\n                };\n                momentumY = this.hasVerticalScroll ? utils.momentum(this.y, this.startY, duration, this.maxScrollY, this.options.bounce ? this.wrapperHeight : 0, this.options.deceleration) : {\n                    destination: newY,\n                    duration: 0\n                };\n                newX = momentumX.destination;\n                newY = momentumY.destination;\n                time = Math.max(momentumX.duration, momentumY.duration);\n                this.isInTransition = 1;\n            }\n\n            if (this.options.snap) {\n                var snap = this._nearestSnap(newX, newY);\n                this.currentPage = snap;\n                time = this.options.snapSpeed || Math.max(Math.max(Math.min(Math.abs(newX - snap.x), 1000), Math.min(Math.abs(newY - snap.y), 1000)), 300);\n                newX = snap.x;\n                newY = snap.y;\n\n                this.directionX = 0;\n                this.directionY = 0;\n                easing = this.options.bounceEasing;\n            }\n\n            // INSERT POINT: _end\n\n            if (newX != this.x || newY != this.y) {\n                // change easing function when scroller goes out of the boundaries\n                if (newX > 0 || newX < this.maxScrollX || newY > 0 || newY < this.maxScrollY) {\n                    easing = utils.ease.quadratic;\n                }\n\n                this.scrollTo(newX, newY, time, easing);\n                return;\n            }\n\n            this._execEvent('scrollEnd');\n        },\n\n        _resize: function _resize() {\n            var that = this;\n\n            clearTimeout(this.resizeTimeout);\n\n            this.resizeTimeout = setTimeout(function () {\n                that.refresh();\n            }, this.options.resizePolling);\n        },\n\n        resetPosition: function resetPosition(time) {\n            var x = this.x,\n                y = this.y;\n\n            time = time || 0;\n\n            if (!this.hasHorizontalScroll || this.x > 0) {\n                x = 0;\n            } else if (this.x < this.maxScrollX) {\n                x = this.maxScrollX;\n            }\n\n            if (!this.hasVerticalScroll || this.y > 0) {\n                y = 0;\n            } else if (this.y < this.maxScrollY) {\n                y = this.maxScrollY;\n            }\n\n            if (x == this.x && y == this.y) {\n                return false;\n            }\n\n            this.scrollTo(x, y, time, this.options.bounceEasing);\n\n            return true;\n        },\n\n        disable: function disable() {\n            this.enabled = false;\n        },\n\n        enable: function enable() {\n            this.enabled = true;\n        },\n\n        refresh: function refresh() {\n            var rf = this.wrapper.offsetHeight; // Force reflow\n\n            this.wrapperWidth = this.wrapper.clientWidth;\n            this.wrapperHeight = this.wrapper.clientHeight;\n\n            /* REPLACE START: refresh */\n\n            this.scrollerWidth = this.scroller.offsetWidth;\n            this.scrollerHeight = this.scroller.offsetHeight;\n\n            this.maxScrollX = this.wrapperWidth - this.scrollerWidth;\n            this.maxScrollY = this.wrapperHeight - this.scrollerHeight;\n\n            /* REPLACE END: refresh */\n\n            this.hasHorizontalScroll = this.options.scrollX && this.maxScrollX < 0;\n            this.hasVerticalScroll = this.options.scrollY && this.maxScrollY < 0;\n\n            if (!this.hasHorizontalScroll) {\n                this.maxScrollX = 0;\n                this.scrollerWidth = this.wrapperWidth;\n            }\n\n            if (!this.hasVerticalScroll) {\n                this.maxScrollY = 0;\n                this.scrollerHeight = this.wrapperHeight;\n            }\n\n            this.endTime = 0;\n            this.directionX = 0;\n            this.directionY = 0;\n\n            this.wrapperOffset = utils.offset(this.wrapper);\n\n            this._execEvent('refresh');\n\n            this.resetPosition();\n\n            // INSERT POINT: _refresh\n        },\n\n        on: function on(type, fn) {\n            if (!this._events[type]) {\n                this._events[type] = [];\n            }\n\n            this._events[type].push(fn);\n        },\n\n        off: function off(type, fn) {\n            if (!this._events[type]) {\n                return;\n            }\n\n            var index = this._events[type].indexOf(fn);\n\n            if (index > -1) {\n                this._events[type].splice(index, 1);\n            }\n        },\n\n        _execEvent: function _execEvent(type) {\n            if (!this._events[type]) {\n                return;\n            }\n\n            var i = 0,\n                l = this._events[type].length;\n\n            if (!l) {\n                return;\n            }\n\n            for (; i < l; i++) {\n                this._events[type][i].apply(this, [].slice.call(arguments, 1));\n            }\n        },\n\n        scrollBy: function scrollBy(x, y, time, easing) {\n            x = this.x + x;\n            y = this.y + y;\n            time = time || 0;\n\n            this.scrollTo(x, y, time, easing);\n        },\n\n        scrollTo: function scrollTo(x, y, time, easing) {\n            easing = easing || utils.ease.circular;\n\n            this.isInTransition = this.options.useTransition && time > 0;\n\n            if (!time || this.options.useTransition && easing.style) {\n                this._transitionTimingFunction(easing.style);\n                this._transitionTime(time);\n                this._translate(x, y);\n            } else {\n                this._animate(x, y, time, easing.fn);\n            }\n        },\n\n        scrollToElement: function scrollToElement(el, time, offsetX, offsetY, easing) {\n            el = el.nodeType ? el : this.scroller.querySelector(el);\n\n            if (!el) {\n                return;\n            }\n\n            var pos = utils.offset(el);\n\n            pos.left -= this.wrapperOffset.left;\n            pos.top -= this.wrapperOffset.top;\n\n            // if offsetX/Y are true we center the element to the screen\n            if (offsetX === true) {\n                offsetX = Math.round(el.offsetWidth / 2 - this.wrapper.offsetWidth / 2);\n            }\n            if (offsetY === true) {\n                offsetY = Math.round(el.offsetHeight / 2 - this.wrapper.offsetHeight / 2);\n            }\n\n            pos.left -= offsetX || 0;\n            pos.top -= offsetY || 0;\n\n            pos.left = pos.left > 0 ? 0 : pos.left < this.maxScrollX ? this.maxScrollX : pos.left;\n            pos.top = pos.top > 0 ? 0 : pos.top < this.maxScrollY ? this.maxScrollY : pos.top;\n\n            time = time === undefined || time === null || time === 'auto' ? Math.max(Math.abs(this.x - pos.left), Math.abs(this.y - pos.top)) : time;\n\n            this.scrollTo(pos.left, pos.top, time, easing);\n        },\n\n        _transitionTime: function _transitionTime(time) {\n            time = time || 0;\n\n            this.scrollerStyle[utils.style.transitionDuration] = time + 'ms';\n\n            if (!time && utils.isBadAndroid) {\n                this.scrollerStyle[utils.style.transitionDuration] = '0.001s';\n            }\n\n            if (this.indicators) {\n                for (var i = this.indicators.length; i--;) {\n                    this.indicators[i].transitionTime(time);\n                }\n            }\n\n            // INSERT POINT: _transitionTime\n        },\n\n        _transitionTimingFunction: function _transitionTimingFunction(easing) {\n            this.scrollerStyle[utils.style.transitionTimingFunction] = easing;\n\n            if (this.indicators) {\n                for (var i = this.indicators.length; i--;) {\n                    this.indicators[i].transitionTimingFunction(easing);\n                }\n            }\n\n            // INSERT POINT: _transitionTimingFunction\n        },\n\n        _translate: function _translate(x, y) {\n            if (this.options.useTransform) {\n\n                /* REPLACE START: _translate */\n\n                this.scrollerStyle[utils.style.transform] = 'translate(' + x + 'px,' + y + 'px)' + this.translateZ;\n\n                /* REPLACE END: _translate */\n            } else {\n                x = Math.round(x);\n                y = Math.round(y);\n                this.scrollerStyle.left = x + 'px';\n                this.scrollerStyle.top = y + 'px';\n            }\n\n            this.x = x;\n            this.y = y;\n\n            if (this.indicators) {\n                for (var i = this.indicators.length; i--;) {\n                    this.indicators[i].updatePosition();\n                }\n            }\n\n            // INSERT POINT: _translate\n        },\n\n        _initEvents: function _initEvents(remove) {\n            var eventType = remove ? utils.removeEvent : utils.addEvent,\n                target = this.options.bindToWrapper ? this.wrapper : window;\n\n            eventType(window, 'orientationchange', this);\n            eventType(window, 'resize', this);\n\n            if (this.options.click) {\n                eventType(this.wrapper, 'click', this, true);\n            }\n\n            if (!this.options.disableMouse) {\n                eventType(this.wrapper, 'mousedown', this);\n                eventType(target, 'mousemove', this);\n                eventType(target, 'mousecancel', this);\n                eventType(target, 'mouseup', this);\n            }\n\n            if (utils.hasPointer && !this.options.disablePointer) {\n                eventType(this.wrapper, utils.prefixPointerEvent('pointerdown'), this);\n                eventType(target, utils.prefixPointerEvent('pointermove'), this);\n                eventType(target, utils.prefixPointerEvent('pointercancel'), this);\n                eventType(target, utils.prefixPointerEvent('pointerup'), this);\n            }\n\n            if (utils.hasTouch && !this.options.disableTouch) {\n                eventType(this.wrapper, 'touchstart', this);\n                eventType(target, 'touchmove', this);\n                eventType(target, 'touchcancel', this);\n                eventType(target, 'touchend', this);\n            }\n\n            eventType(this.scroller, 'transitionend', this);\n            eventType(this.scroller, 'webkitTransitionEnd', this);\n            eventType(this.scroller, 'oTransitionEnd', this);\n            eventType(this.scroller, 'MSTransitionEnd', this);\n        },\n\n        getComputedPosition: function getComputedPosition() {\n            var matrix = window.getComputedStyle(this.scroller, null),\n                x,\n                y;\n\n            if (this.options.useTransform) {\n                matrix = matrix[utils.style.transform].split(')')[0].split(', ');\n                x = +(matrix[12] || matrix[4]);\n                y = +(matrix[13] || matrix[5]);\n            } else {\n                x = +matrix.left.replace(/[^-\\d.]/g, '');\n                y = +matrix.top.replace(/[^-\\d.]/g, '');\n            }\n\n            return {\n                x: x,\n                y: y\n            };\n        },\n\n        _initIndicators: function _initIndicators() {\n            var interactive = this.options.interactiveScrollbars,\n                customStyle = typeof this.options.scrollbars != 'string',\n                indicators = [],\n                indicator;\n\n            var that = this;\n\n            this.indicators = [];\n\n            if (this.options.scrollbars) {\n                // Vertical scrollbar\n                if (this.options.scrollY) {\n                    indicator = {\n                        el: createDefaultScrollbar('v', interactive, this.options.scrollbars),\n                        interactive: interactive,\n                        defaultScrollbars: true,\n                        customStyle: customStyle,\n                        resize: this.options.resizeScrollbars,\n                        shrink: this.options.shrinkScrollbars,\n                        fade: this.options.fadeScrollbars,\n                        listenX: false\n                    };\n\n                    this.wrapper.appendChild(indicator.el);\n                    indicators.push(indicator);\n                }\n\n                // Horizontal scrollbar\n                if (this.options.scrollX) {\n                    indicator = {\n                        el: createDefaultScrollbar('h', interactive, this.options.scrollbars),\n                        interactive: interactive,\n                        defaultScrollbars: true,\n                        customStyle: customStyle,\n                        resize: this.options.resizeScrollbars,\n                        shrink: this.options.shrinkScrollbars,\n                        fade: this.options.fadeScrollbars,\n                        listenY: false\n                    };\n\n                    this.wrapper.appendChild(indicator.el);\n                    indicators.push(indicator);\n                }\n            }\n\n            if (this.options.indicators) {\n                // TODO: check concat compatibility\n                indicators = indicators.concat(this.options.indicators);\n            }\n\n            for (var i = indicators.length; i--;) {\n                this.indicators.push(new Indicator(this, indicators[i]));\n            }\n\n            // TODO: check if we can use array.map (wide compatibility and performance issues)\n            function _indicatorsMap(fn) {\n                for (var i = that.indicators.length; i--;) {\n                    fn.call(that.indicators[i]);\n                }\n            }\n\n            if (this.options.fadeScrollbars) {\n                this.on('scrollEnd', function () {\n                    _indicatorsMap(function () {\n                        this.fade();\n                    });\n                });\n\n                this.on('scrollCancel', function () {\n                    _indicatorsMap(function () {\n                        this.fade();\n                    });\n                });\n\n                this.on('scrollStart', function () {\n                    _indicatorsMap(function () {\n                        this.fade(1);\n                    });\n                });\n\n                this.on('beforeScrollStart', function () {\n                    _indicatorsMap(function () {\n                        this.fade(1, true);\n                    });\n                });\n            }\n\n            this.on('refresh', function () {\n                _indicatorsMap(function () {\n                    this.refresh();\n                });\n            });\n\n            this.on('destroy', function () {\n                _indicatorsMap(function () {\n                    this.destroy();\n                });\n\n                delete this.indicators;\n            });\n        },\n\n        _initWheel: function _initWheel() {\n            utils.addEvent(this.wrapper, 'wheel', this);\n            utils.addEvent(this.wrapper, 'mousewheel', this);\n            utils.addEvent(this.wrapper, 'DOMMouseScroll', this);\n\n            this.on('destroy', function () {\n                utils.removeEvent(this.wrapper, 'wheel', this);\n                utils.removeEvent(this.wrapper, 'mousewheel', this);\n                utils.removeEvent(this.wrapper, 'DOMMouseScroll', this);\n            });\n        },\n\n        _wheel: function _wheel(e) {\n            if (!this.enabled) {\n                return;\n            }\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            var wheelDeltaX,\n                wheelDeltaY,\n                newX,\n                newY,\n                that = this;\n\n            if (this.wheelTimeout === undefined) {\n                that._execEvent('scrollStart');\n            }\n\n            // Execute the scrollEnd event after 400ms the wheel stopped scrolling\n            clearTimeout(this.wheelTimeout);\n            this.wheelTimeout = setTimeout(function () {\n                that._execEvent('scrollEnd');\n                that.wheelTimeout = undefined;\n            }, 400);\n\n            if ('deltaX' in e) {\n                if (e.deltaMode === 1) {\n                    wheelDeltaX = -e.deltaX * this.options.mouseWheelSpeed;\n                    wheelDeltaY = -e.deltaY * this.options.mouseWheelSpeed;\n                } else {\n                    wheelDeltaX = -e.deltaX;\n                    wheelDeltaY = -e.deltaY;\n                }\n            } else if ('wheelDeltaX' in e) {\n                wheelDeltaX = e.wheelDeltaX / 120 * this.options.mouseWheelSpeed;\n                wheelDeltaY = e.wheelDeltaY / 120 * this.options.mouseWheelSpeed;\n            } else if ('wheelDelta' in e) {\n                wheelDeltaX = wheelDeltaY = e.wheelDelta / 120 * this.options.mouseWheelSpeed;\n            } else if ('detail' in e) {\n                wheelDeltaX = wheelDeltaY = -e.detail / 3 * this.options.mouseWheelSpeed;\n            } else {\n                return;\n            }\n\n            wheelDeltaX *= this.options.invertWheelDirection;\n            wheelDeltaY *= this.options.invertWheelDirection;\n\n            if (!this.hasVerticalScroll) {\n                wheelDeltaX = wheelDeltaY;\n                wheelDeltaY = 0;\n            }\n\n            if (this.options.snap) {\n                newX = this.currentPage.pageX;\n                newY = this.currentPage.pageY;\n\n                if (wheelDeltaX > 0) {\n                    newX--;\n                } else if (wheelDeltaX < 0) {\n                    newX++;\n                }\n\n                if (wheelDeltaY > 0) {\n                    newY--;\n                } else if (wheelDeltaY < 0) {\n                    newY++;\n                }\n\n                this.goToPage(newX, newY);\n\n                return;\n            }\n\n            newX = this.x + Math.round(this.hasHorizontalScroll ? wheelDeltaX : 0);\n            newY = this.y + Math.round(this.hasVerticalScroll ? wheelDeltaY : 0);\n\n            if (newX > 0) {\n                newX = 0;\n            } else if (newX < this.maxScrollX) {\n                newX = this.maxScrollX;\n            }\n\n            if (newY > 0) {\n                newY = 0;\n            } else if (newY < this.maxScrollY) {\n                newY = this.maxScrollY;\n            }\n\n            this.scrollTo(newX, newY, 0);\n\n            if (this.options.probeType > 1) {\n                this._execEvent('scroll');\n            }\n\n            // INSERT POINT: _wheel\n        },\n\n        _initSnap: function _initSnap() {\n            this.currentPage = {};\n\n            if (typeof this.options.snap == 'string') {\n                this.options.snap = this.scroller.querySelectorAll(this.options.snap);\n            }\n\n            this.on('refresh', function () {\n                var i = 0,\n                    l,\n                    m = 0,\n                    n,\n                    cx,\n                    cy,\n                    x = 0,\n                    y,\n                    stepX = this.options.snapStepX || this.wrapperWidth,\n                    stepY = this.options.snapStepY || this.wrapperHeight,\n                    el;\n\n                this.pages = [];\n\n                if (!this.wrapperWidth || !this.wrapperHeight || !this.scrollerWidth || !this.scrollerHeight) {\n                    return;\n                }\n\n                if (this.options.snap === true) {\n                    cx = Math.round(stepX / 2);\n                    cy = Math.round(stepY / 2);\n\n                    while (x > -this.scrollerWidth) {\n                        this.pages[i] = [];\n                        l = 0;\n                        y = 0;\n\n                        while (y > -this.scrollerHeight) {\n                            this.pages[i][l] = {\n                                x: Math.max(x, this.maxScrollX),\n                                y: Math.max(y, this.maxScrollY),\n                                width: stepX,\n                                height: stepY,\n                                cx: x - cx,\n                                cy: y - cy\n                            };\n\n                            y -= stepY;\n                            l++;\n                        }\n\n                        x -= stepX;\n                        i++;\n                    }\n                } else {\n                    el = this.options.snap;\n                    l = el.length;\n                    n = -1;\n\n                    for (; i < l; i++) {\n                        if (i === 0 || el[i].offsetLeft <= el[i - 1].offsetLeft) {\n                            m = 0;\n                            n++;\n                        }\n\n                        if (!this.pages[m]) {\n                            this.pages[m] = [];\n                        }\n\n                        x = Math.max(-el[i].offsetLeft, this.maxScrollX);\n                        y = Math.max(-el[i].offsetTop, this.maxScrollY);\n                        cx = x - Math.round(el[i].offsetWidth / 2);\n                        cy = y - Math.round(el[i].offsetHeight / 2);\n\n                        this.pages[m][n] = {\n                            x: x,\n                            y: y,\n                            width: el[i].offsetWidth,\n                            height: el[i].offsetHeight,\n                            cx: cx,\n                            cy: cy\n                        };\n\n                        if (x > this.maxScrollX) {\n                            m++;\n                        }\n                    }\n                }\n\n                this.goToPage(this.currentPage.pageX || 0, this.currentPage.pageY || 0, 0);\n\n                // Update snap threshold if needed\n                if (this.options.snapThreshold % 1 === 0) {\n                    this.snapThresholdX = this.options.snapThreshold;\n                    this.snapThresholdY = this.options.snapThreshold;\n                } else {\n                    this.snapThresholdX = Math.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].width * this.options.snapThreshold);\n                    this.snapThresholdY = Math.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].height * this.options.snapThreshold);\n                }\n            });\n\n            this.on('flick', function () {\n                var time = this.options.snapSpeed || Math.max(Math.max(Math.min(Math.abs(this.x - this.startX), 1000), Math.min(Math.abs(this.y - this.startY), 1000)), 300);\n\n                this.goToPage(this.currentPage.pageX + this.directionX, this.currentPage.pageY + this.directionY, time);\n            });\n        },\n\n        _nearestSnap: function _nearestSnap(x, y) {\n            if (!this.pages.length) {\n                return {\n                    x: 0,\n                    y: 0,\n                    pageX: 0,\n                    pageY: 0\n                };\n            }\n\n            var i = 0,\n                l = this.pages.length,\n                m = 0;\n\n            // Check if we exceeded the snap threshold\n            if (Math.abs(x - this.absStartX) < this.snapThresholdX && Math.abs(y - this.absStartY) < this.snapThresholdY) {\n                return this.currentPage;\n            }\n\n            if (x > 0) {\n                x = 0;\n            } else if (x < this.maxScrollX) {\n                x = this.maxScrollX;\n            }\n\n            if (y > 0) {\n                y = 0;\n            } else if (y < this.maxScrollY) {\n                y = this.maxScrollY;\n            }\n\n            for (; i < l; i++) {\n                if (x >= this.pages[i][0].cx) {\n                    x = this.pages[i][0].x;\n                    break;\n                }\n            }\n\n            l = this.pages[i].length;\n\n            for (; m < l; m++) {\n                if (y >= this.pages[0][m].cy) {\n                    y = this.pages[0][m].y;\n                    break;\n                }\n            }\n\n            if (i == this.currentPage.pageX) {\n                i += this.directionX;\n\n                if (i < 0) {\n                    i = 0;\n                } else if (i >= this.pages.length) {\n                    i = this.pages.length - 1;\n                }\n\n                x = this.pages[i][0].x;\n            }\n\n            if (m == this.currentPage.pageY) {\n                m += this.directionY;\n\n                if (m < 0) {\n                    m = 0;\n                } else if (m >= this.pages[0].length) {\n                    m = this.pages[0].length - 1;\n                }\n\n                y = this.pages[0][m].y;\n            }\n\n            return {\n                x: x,\n                y: y,\n                pageX: i,\n                pageY: m\n            };\n        },\n\n        goToPage: function goToPage(x, y, time, easing) {\n            easing = easing || this.options.bounceEasing;\n\n            if (x >= this.pages.length) {\n                x = this.pages.length - 1;\n            } else if (x < 0) {\n                x = 0;\n            }\n\n            if (y >= this.pages[x].length) {\n                y = this.pages[x].length - 1;\n            } else if (y < 0) {\n                y = 0;\n            }\n\n            var posX = this.pages[x][y].x,\n                posY = this.pages[x][y].y;\n\n            time = time === undefined ? this.options.snapSpeed || Math.max(Math.max(Math.min(Math.abs(posX - this.x), 1000), Math.min(Math.abs(posY - this.y), 1000)), 300) : time;\n\n            this.currentPage = {\n                x: posX,\n                y: posY,\n                pageX: x,\n                pageY: y\n            };\n\n            this.scrollTo(posX, posY, time, easing);\n        },\n\n        next: function next(time, easing) {\n            var x = this.currentPage.pageX,\n                y = this.currentPage.pageY;\n\n            x++;\n\n            if (x >= this.pages.length && this.hasVerticalScroll) {\n                x = 0;\n                y++;\n            }\n\n            this.goToPage(x, y, time, easing);\n        },\n\n        prev: function prev(time, easing) {\n            var x = this.currentPage.pageX,\n                y = this.currentPage.pageY;\n\n            x--;\n\n            if (x < 0 && this.hasVerticalScroll) {\n                x = 0;\n                y--;\n            }\n\n            this.goToPage(x, y, time, easing);\n        },\n\n        _initKeys: function _initKeys(e) {\n            // default key bindings\n            var keys = {\n                pageUp: 33,\n                pageDown: 34,\n                end: 35,\n                home: 36,\n                left: 37,\n                up: 38,\n                right: 39,\n                down: 40\n            };\n            var i;\n\n            // if you give me characters I give you keycode\n            if (_typeof(this.options.keyBindings) == 'object') {\n                for (i in this.options.keyBindings) {\n                    if (typeof this.options.keyBindings[i] == 'string') {\n                        this.options.keyBindings[i] = this.options.keyBindings[i].toUpperCase().charCodeAt(0);\n                    }\n                }\n            } else {\n                this.options.keyBindings = {};\n            }\n\n            for (i in keys) {\n                this.options.keyBindings[i] = this.options.keyBindings[i] || keys[i];\n            }\n\n            utils.addEvent(window, 'keydown', this);\n\n            this.on('destroy', function () {\n                utils.removeEvent(window, 'keydown', this);\n            });\n        },\n\n        _key: function _key(e) {\n            if (!this.enabled) {\n                return;\n            }\n\n            var snap = this.options.snap,\n                // we are using this alot, better to cache it\n            newX = snap ? this.currentPage.pageX : this.x,\n                newY = snap ? this.currentPage.pageY : this.y,\n                now = utils.getTime(),\n                prevTime = this.keyTime || 0,\n                acceleration = 0.250,\n                pos;\n\n            if (this.options.useTransition && this.isInTransition) {\n                pos = this.getComputedPosition();\n\n                this._translate(Math.round(pos.x), Math.round(pos.y));\n                this.isInTransition = false;\n            }\n\n            this.keyAcceleration = now - prevTime < 200 ? Math.min(this.keyAcceleration + acceleration, 50) : 0;\n\n            switch (e.keyCode) {\n                case this.options.keyBindings.pageUp:\n                    if (this.hasHorizontalScroll && !this.hasVerticalScroll) {\n                        newX += snap ? 1 : this.wrapperWidth;\n                    } else {\n                        newY += snap ? 1 : this.wrapperHeight;\n                    }\n                    break;\n                case this.options.keyBindings.pageDown:\n                    if (this.hasHorizontalScroll && !this.hasVerticalScroll) {\n                        newX -= snap ? 1 : this.wrapperWidth;\n                    } else {\n                        newY -= snap ? 1 : this.wrapperHeight;\n                    }\n                    break;\n                case this.options.keyBindings.end:\n                    newX = snap ? this.pages.length - 1 : this.maxScrollX;\n                    newY = snap ? this.pages[0].length - 1 : this.maxScrollY;\n                    break;\n                case this.options.keyBindings.home:\n                    newX = 0;\n                    newY = 0;\n                    break;\n                case this.options.keyBindings.left:\n                    newX += snap ? -1 : 5 + this.keyAcceleration >> 0;\n                    break;\n                case this.options.keyBindings.up:\n                    newY += snap ? 1 : 5 + this.keyAcceleration >> 0;\n                    break;\n                case this.options.keyBindings.right:\n                    newX -= snap ? -1 : 5 + this.keyAcceleration >> 0;\n                    break;\n                case this.options.keyBindings.down:\n                    newY -= snap ? 1 : 5 + this.keyAcceleration >> 0;\n                    break;\n                default:\n                    return;\n            }\n\n            if (snap) {\n                this.goToPage(newX, newY);\n                return;\n            }\n\n            if (newX > 0) {\n                newX = 0;\n                this.keyAcceleration = 0;\n            } else if (newX < this.maxScrollX) {\n                newX = this.maxScrollX;\n                this.keyAcceleration = 0;\n            }\n\n            if (newY > 0) {\n                newY = 0;\n                this.keyAcceleration = 0;\n            } else if (newY < this.maxScrollY) {\n                newY = this.maxScrollY;\n                this.keyAcceleration = 0;\n            }\n\n            this.scrollTo(newX, newY, 0);\n\n            this.keyTime = now;\n        },\n\n        _animate: function _animate(destX, destY, duration, easingFn) {\n            var that = this,\n                startX = this.x,\n                startY = this.y,\n                startTime = utils.getTime(),\n                destTime = startTime + duration;\n\n            function step() {\n                var now = utils.getTime(),\n                    newX,\n                    newY,\n                    easing;\n\n                if (now >= destTime) {\n                    that.isAnimating = false;\n                    that._translate(destX, destY);\n\n                    if (!that.resetPosition(that.options.bounceTime)) {\n                        that._execEvent('scrollEnd');\n                    }\n\n                    return;\n                }\n\n                now = (now - startTime) / duration;\n                easing = easingFn(now);\n                newX = (destX - startX) * easing + startX;\n                newY = (destY - startY) * easing + startY;\n                that._translate(newX, newY);\n\n                if (that.isAnimating) {\n                    rAF(step);\n                }\n\n                if (that.options.probeType == 3) {\n                    that._execEvent('scroll');\n                }\n            }\n\n            this.isAnimating = true;\n            step();\n        },\n\n        handleEvent: function handleEvent(e) {\n            switch (e.type) {\n                case 'touchstart':\n                case 'pointerdown':\n                case 'MSPointerDown':\n                case 'mousedown':\n                    this._start(e);\n                    break;\n                case 'touchmove':\n                case 'pointermove':\n                case 'MSPointerMove':\n                case 'mousemove':\n                    this._move(e);\n                    break;\n                case 'touchend':\n                case 'pointerup':\n                case 'MSPointerUp':\n                case 'mouseup':\n                case 'touchcancel':\n                case 'pointercancel':\n                case 'MSPointerCancel':\n                case 'mousecancel':\n                    this._end(e);\n                    break;\n                case 'orientationchange':\n                case 'resize':\n                    this._resize();\n                    break;\n                case 'transitionend':\n                case 'webkitTransitionEnd':\n                case 'oTransitionEnd':\n                case 'MSTransitionEnd':\n                    this._transitionEnd(e);\n                    break;\n                case 'wheel':\n                case 'DOMMouseScroll':\n                case 'mousewheel':\n                    this._wheel(e);\n                    break;\n                case 'keydown':\n                    this._key(e);\n                    break;\n                case 'click':\n                    if (!e._constructed) {\n                        e.preventDefault();\n                        e.stopPropagation();\n                    }\n                    break;\n            }\n        }\n    };\n\n    function createDefaultScrollbar(direction, interactive, type) {\n        var scrollbar = document.createElement('div'),\n            indicator = document.createElement('div');\n\n        if (type === true) {\n            scrollbar.style.cssText = 'position:absolute;z-index:9999';\n            indicator.style.cssText = '-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:absolute;background:rgba(0,0,0,0.5);border:1px solid rgba(255,255,255,0.9);border-radius:3px';\n        }\n\n        indicator.className = 'iScrollIndicator';\n\n        if (direction == 'h') {\n            if (type === true) {\n                scrollbar.style.cssText += ';height:7px;left:2px;right:2px;bottom:0';\n                indicator.style.height = '100%';\n            }\n            scrollbar.className = 'iScrollHorizontalScrollbar';\n        } else {\n            if (type === true) {\n                scrollbar.style.cssText += ';width:7px;bottom:2px;top:2px;right:1px';\n                indicator.style.width = '100%';\n            }\n            scrollbar.className = 'iScrollVerticalScrollbar';\n        }\n\n        scrollbar.style.cssText += ';overflow:hidden';\n\n        if (!interactive) {\n            scrollbar.style.pointerEvents = 'none';\n        }\n\n        scrollbar.appendChild(indicator);\n\n        return scrollbar;\n    }\n\n    function Indicator(scroller, options) {\n        this.wrapper = typeof options.el == 'string' ? document.querySelector(options.el) : options.el;\n        this.wrapperStyle = this.wrapper.style;\n        this.indicator = this.wrapper.children[0];\n        this.indicatorStyle = this.indicator.style;\n        this.scroller = scroller;\n\n        this.options = {\n            listenX: true,\n            listenY: true,\n            interactive: false,\n            resize: true,\n            defaultScrollbars: false,\n            shrink: false,\n            fade: false,\n            speedRatioX: 0,\n            speedRatioY: 0\n        };\n\n        for (var i in options) {\n            this.options[i] = options[i];\n        }\n\n        this.sizeRatioX = 1;\n        this.sizeRatioY = 1;\n        this.maxPosX = 0;\n        this.maxPosY = 0;\n\n        if (this.options.interactive) {\n            if (!this.options.disableTouch) {\n                utils.addEvent(this.indicator, 'touchstart', this);\n                utils.addEvent(window, 'touchend', this);\n            }\n            if (!this.options.disablePointer) {\n                utils.addEvent(this.indicator, utils.prefixPointerEvent('pointerdown'), this);\n                utils.addEvent(window, utils.prefixPointerEvent('pointerup'), this);\n            }\n            if (!this.options.disableMouse) {\n                utils.addEvent(this.indicator, 'mousedown', this);\n                utils.addEvent(window, 'mouseup', this);\n            }\n        }\n\n        if (this.options.fade) {\n            this.wrapperStyle[utils.style.transform] = this.scroller.translateZ;\n            this.wrapperStyle[utils.style.transitionDuration] = utils.isBadAndroid ? '0.001s' : '0ms';\n            this.wrapperStyle.opacity = '0';\n        }\n    }\n\n    Indicator.prototype = {\n        handleEvent: function handleEvent(e) {\n            switch (e.type) {\n                case 'touchstart':\n                case 'pointerdown':\n                case 'MSPointerDown':\n                case 'mousedown':\n                    this._start(e);\n                    break;\n                case 'touchmove':\n                case 'pointermove':\n                case 'MSPointerMove':\n                case 'mousemove':\n                    this._move(e);\n                    break;\n                case 'touchend':\n                case 'pointerup':\n                case 'MSPointerUp':\n                case 'mouseup':\n                case 'touchcancel':\n                case 'pointercancel':\n                case 'MSPointerCancel':\n                case 'mousecancel':\n                    this._end(e);\n                    break;\n            }\n        },\n\n        destroy: function destroy() {\n            if (this.options.interactive) {\n                utils.removeEvent(this.indicator, 'touchstart', this);\n                utils.removeEvent(this.indicator, utils.prefixPointerEvent('pointerdown'), this);\n                utils.removeEvent(this.indicator, 'mousedown', this);\n\n                utils.removeEvent(window, 'touchmove', this);\n                utils.removeEvent(window, utils.prefixPointerEvent('pointermove'), this);\n                utils.removeEvent(window, 'mousemove', this);\n\n                utils.removeEvent(window, 'touchend', this);\n                utils.removeEvent(window, utils.prefixPointerEvent('pointerup'), this);\n                utils.removeEvent(window, 'mouseup', this);\n            }\n\n            if (this.options.defaultScrollbars) {\n                this.wrapper.parentNode.removeChild(this.wrapper);\n            }\n        },\n\n        _start: function _start(e) {\n            var point = e.touches ? e.touches[0] : e;\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            this.transitionTime();\n\n            this.initiated = true;\n            this.moved = false;\n            this.lastPointX = point.pageX;\n            this.lastPointY = point.pageY;\n\n            this.startTime = utils.getTime();\n\n            if (!this.options.disableTouch) {\n                utils.addEvent(window, 'touchmove', this);\n            }\n            if (!this.options.disablePointer) {\n                utils.addEvent(window, utils.prefixPointerEvent('pointermove'), this);\n            }\n            if (!this.options.disableMouse) {\n                utils.addEvent(window, 'mousemove', this);\n            }\n\n            this.scroller._execEvent('beforeScrollStart');\n        },\n\n        _move: function _move(e) {\n            var point = e.touches ? e.touches[0] : e,\n                deltaX,\n                deltaY,\n                newX,\n                newY,\n                timestamp = utils.getTime();\n\n            if (!this.moved) {\n                this.scroller._execEvent('scrollStart');\n            }\n\n            this.moved = true;\n\n            deltaX = point.pageX - this.lastPointX;\n            this.lastPointX = point.pageX;\n\n            deltaY = point.pageY - this.lastPointY;\n            this.lastPointY = point.pageY;\n\n            newX = this.x + deltaX;\n            newY = this.y + deltaY;\n\n            this._pos(newX, newY);\n\n            if (this.scroller.options.probeType == 1 && timestamp - this.startTime > 300) {\n                this.startTime = timestamp;\n                this.scroller._execEvent('scroll');\n            } else if (this.scroller.options.probeType > 1) {\n                this.scroller._execEvent('scroll');\n            }\n\n            // INSERT POINT: indicator._move\n\n            e.preventDefault();\n            e.stopPropagation();\n        },\n\n        _end: function _end(e) {\n            if (!this.initiated) {\n                return;\n            }\n\n            this.initiated = false;\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            utils.removeEvent(window, 'touchmove', this);\n            utils.removeEvent(window, utils.prefixPointerEvent('pointermove'), this);\n            utils.removeEvent(window, 'mousemove', this);\n\n            if (this.scroller.options.snap) {\n                var snap = this.scroller._nearestSnap(this.scroller.x, this.scroller.y);\n\n                var time = this.options.snapSpeed || Math.max(Math.max(Math.min(Math.abs(this.scroller.x - snap.x), 1000), Math.min(Math.abs(this.scroller.y - snap.y), 1000)), 300);\n\n                if (this.scroller.x != snap.x || this.scroller.y != snap.y) {\n                    this.scroller.directionX = 0;\n                    this.scroller.directionY = 0;\n                    this.scroller.currentPage = snap;\n                    this.scroller.scrollTo(snap.x, snap.y, time, this.scroller.options.bounceEasing);\n                }\n            }\n\n            if (this.moved) {\n                this.scroller._execEvent('scrollEnd');\n            }\n        },\n\n        transitionTime: function transitionTime(time) {\n            time = time || 0;\n            this.indicatorStyle[utils.style.transitionDuration] = time + 'ms';\n\n            if (!time && utils.isBadAndroid) {\n                this.indicatorStyle[utils.style.transitionDuration] = '0.001s';\n            }\n        },\n\n        transitionTimingFunction: function transitionTimingFunction(easing) {\n            this.indicatorStyle[utils.style.transitionTimingFunction] = easing;\n        },\n\n        refresh: function refresh() {\n            this.transitionTime();\n\n            if (this.options.listenX && !this.options.listenY) {\n                this.indicatorStyle.display = this.scroller.hasHorizontalScroll ? 'block' : 'none';\n            } else if (this.options.listenY && !this.options.listenX) {\n                this.indicatorStyle.display = this.scroller.hasVerticalScroll ? 'block' : 'none';\n            } else {\n                this.indicatorStyle.display = this.scroller.hasHorizontalScroll || this.scroller.hasVerticalScroll ? 'block' : 'none';\n            }\n\n            if (this.scroller.hasHorizontalScroll && this.scroller.hasVerticalScroll) {\n                utils.addClass(this.wrapper, 'iScrollBothScrollbars');\n                utils.removeClass(this.wrapper, 'iScrollLoneScrollbar');\n\n                if (this.options.defaultScrollbars && this.options.customStyle) {\n                    if (this.options.listenX) {\n                        this.wrapper.style.right = '8px';\n                    } else {\n                        this.wrapper.style.bottom = '8px';\n                    }\n                }\n            } else {\n                utils.removeClass(this.wrapper, 'iScrollBothScrollbars');\n                utils.addClass(this.wrapper, 'iScrollLoneScrollbar');\n\n                if (this.options.defaultScrollbars && this.options.customStyle) {\n                    if (this.options.listenX) {\n                        this.wrapper.style.right = '2px';\n                    } else {\n                        this.wrapper.style.bottom = '2px';\n                    }\n                }\n            }\n\n            var r = this.wrapper.offsetHeight; // force refresh\n\n            if (this.options.listenX) {\n                this.wrapperWidth = this.wrapper.clientWidth;\n                if (this.options.resize) {\n                    this.indicatorWidth = Math.max(Math.round(this.wrapperWidth * this.wrapperWidth / (this.scroller.scrollerWidth || this.wrapperWidth || 1)), 8);\n                    this.indicatorStyle.width = this.indicatorWidth + 'px';\n                } else {\n                    this.indicatorWidth = this.indicator.clientWidth;\n                }\n\n                this.maxPosX = this.wrapperWidth - this.indicatorWidth;\n\n                if (this.options.shrink == 'clip') {\n                    this.minBoundaryX = -this.indicatorWidth + 8;\n                    this.maxBoundaryX = this.wrapperWidth - 8;\n                } else {\n                    this.minBoundaryX = 0;\n                    this.maxBoundaryX = this.maxPosX;\n                }\n\n                this.sizeRatioX = this.options.speedRatioX || this.scroller.maxScrollX && this.maxPosX / this.scroller.maxScrollX;\n            }\n\n            if (this.options.listenY) {\n                this.wrapperHeight = this.wrapper.clientHeight;\n                if (this.options.resize) {\n                    this.indicatorHeight = Math.max(Math.round(this.wrapperHeight * this.wrapperHeight / (this.scroller.scrollerHeight || this.wrapperHeight || 1)), 8);\n                    this.indicatorStyle.height = this.indicatorHeight + 'px';\n                } else {\n                    this.indicatorHeight = this.indicator.clientHeight;\n                }\n\n                this.maxPosY = this.wrapperHeight - this.indicatorHeight;\n\n                if (this.options.shrink == 'clip') {\n                    this.minBoundaryY = -this.indicatorHeight + 8;\n                    this.maxBoundaryY = this.wrapperHeight - 8;\n                } else {\n                    this.minBoundaryY = 0;\n                    this.maxBoundaryY = this.maxPosY;\n                }\n\n                this.maxPosY = this.wrapperHeight - this.indicatorHeight;\n                this.sizeRatioY = this.options.speedRatioY || this.scroller.maxScrollY && this.maxPosY / this.scroller.maxScrollY;\n            }\n\n            this.updatePosition();\n        },\n\n        updatePosition: function updatePosition() {\n            var x = this.options.listenX && Math.round(this.sizeRatioX * this.scroller.x) || 0,\n                y = this.options.listenY && Math.round(this.sizeRatioY * this.scroller.y) || 0;\n\n            if (!this.options.ignoreBoundaries) {\n                if (x < this.minBoundaryX) {\n                    if (this.options.shrink == 'scale') {\n                        this.width = Math.max(this.indicatorWidth + x, 8);\n                        this.indicatorStyle.width = this.width + 'px';\n                    }\n                    x = this.minBoundaryX;\n                } else if (x > this.maxBoundaryX) {\n                    if (this.options.shrink == 'scale') {\n                        this.width = Math.max(this.indicatorWidth - (x - this.maxPosX), 8);\n                        this.indicatorStyle.width = this.width + 'px';\n                        x = this.maxPosX + this.indicatorWidth - this.width;\n                    } else {\n                        x = this.maxBoundaryX;\n                    }\n                } else if (this.options.shrink == 'scale' && this.width != this.indicatorWidth) {\n                    this.width = this.indicatorWidth;\n                    this.indicatorStyle.width = this.width + 'px';\n                }\n\n                if (y < this.minBoundaryY) {\n                    if (this.options.shrink == 'scale') {\n                        this.height = Math.max(this.indicatorHeight + y * 3, 8);\n                        this.indicatorStyle.height = this.height + 'px';\n                    }\n                    y = this.minBoundaryY;\n                } else if (y > this.maxBoundaryY) {\n                    if (this.options.shrink == 'scale') {\n                        this.height = Math.max(this.indicatorHeight - (y - this.maxPosY) * 3, 8);\n                        this.indicatorStyle.height = this.height + 'px';\n                        y = this.maxPosY + this.indicatorHeight - this.height;\n                    } else {\n                        y = this.maxBoundaryY;\n                    }\n                } else if (this.options.shrink == 'scale' && this.height != this.indicatorHeight) {\n                    this.height = this.indicatorHeight;\n                    this.indicatorStyle.height = this.height + 'px';\n                }\n            }\n\n            this.x = x;\n            this.y = y;\n\n            if (this.scroller.options.useTransform) {\n                this.indicatorStyle[utils.style.transform] = 'translate(' + x + 'px,' + y + 'px)' + this.scroller.translateZ;\n            } else {\n                this.indicatorStyle.left = x + 'px';\n                this.indicatorStyle.top = y + 'px';\n            }\n        },\n\n        _pos: function _pos(x, y) {\n            if (x < 0) {\n                x = 0;\n            } else if (x > this.maxPosX) {\n                x = this.maxPosX;\n            }\n\n            if (y < 0) {\n                y = 0;\n            } else if (y > this.maxPosY) {\n                y = this.maxPosY;\n            }\n\n            x = this.options.listenX ? Math.round(x / this.sizeRatioX) : this.scroller.x;\n            y = this.options.listenY ? Math.round(y / this.sizeRatioY) : this.scroller.y;\n\n            this.scroller.scrollTo(x, y);\n        },\n\n        fade: function fade(val, hold) {\n            if (hold && !this.visible) {\n                return;\n            }\n\n            clearTimeout(this.fadeTimeout);\n            this.fadeTimeout = null;\n\n            var time = val ? 250 : 500,\n                delay = val ? 0 : 300;\n\n            val = val ? '1' : '0';\n\n            this.wrapperStyle[utils.style.transitionDuration] = time + 'ms';\n\n            this.fadeTimeout = setTimeout(function (val) {\n                this.wrapperStyle.opacity = val;\n                this.visible = +val;\n            }.bind(this, val), delay);\n        }\n    };\n\n    if (typeof module != 'undefined' && module.exports) {\n        module.exports = IScroll;\n    } else if (typeof define == 'function' && define.amd) {\n        define(function () {\n            return IScroll;\n        });\n    } else {\n        window.IScroll = IScroll;\n    }\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./WrcIScroll5/lib/WrcIScroll5.jsx\n// module id = 9\n// module chunks = 0 1"],"mappingslHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACpsourceRoot":""}